/*
 * Swagger Library
 * This is a sample Library server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.duckdns.sdet.models.generated;

import com.fasterxml.jackson.annotation.*;

import java.time.OffsetDateTime;
import java.util.Objects;

/**
 * Order
 */
@JsonPropertyOrder({
        Order.JSON_PROPERTY_ID,
        Order.JSON_PROPERTY_BOOK_ID,
        Order.JSON_PROPERTY_QUANTITY,
        Order.JSON_PROPERTY_SHIP_DATE,
        Order.JSON_PROPERTY_STATUS,
        Order.JSON_PROPERTY_COMPLETE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.8.0")
public class Order {
    public static final String JSON_PROPERTY_ID = "id";
    public static final String JSON_PROPERTY_STATUS = "status";

    public static final String JSON_PROPERTY_BOOK_ID = "bookId";
    public static final String JSON_PROPERTY_COMPLETE = "complete";

    public static final String JSON_PROPERTY_QUANTITY = "quantity";
    private Long id;

    public static final String JSON_PROPERTY_SHIP_DATE = "shipDate";
    private OffsetDateTime shipDate;
    private Long bookId;
    private Integer quantity;
    private StatusEnum status;

    public Order bookId(Long bookId) {
        this.bookId = bookId;
        return this;
    }
    private Boolean complete = false;

    public Order() {
    }

    public Order id(Long id) {
        this.id = id;
        return this;
    }

    /**
     * Get id
     *
     * @return id
     */
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Long getId() {
        return id;
    }


    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Return true if this Order object is equal to o.
     */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Order order = (Order) o;
        return Objects.equals(this.id, order.id) &&
                Objects.equals(this.bookId, order.bookId) &&
                Objects.equals(this.quantity, order.quantity) &&
                Objects.equals(this.shipDate, order.shipDate) &&
                Objects.equals(this.status, order.status) &&
                Objects.equals(this.complete, order.complete);
    }

    /**
     * Get bookId
     *
     * @return bookId
     */
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_BOOK_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Long getBookId() {
        return bookId;
    }


    @JsonProperty(JSON_PROPERTY_BOOK_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBookId(Long bookId) {
        this.bookId = bookId;
    }


    public Order quantity(Integer quantity) {
        this.quantity = quantity;
        return this;
    }

    /**
     * Get quantity
     *
     * @return quantity
     */
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_QUANTITY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getQuantity() {
        return quantity;
    }


    @JsonProperty(JSON_PROPERTY_QUANTITY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setQuantity(Integer quantity) {
        this.quantity = quantity;
    }


    public Order shipDate(OffsetDateTime shipDate) {
        this.shipDate = shipDate;
        return this;
    }

    /**
     * Get shipDate
     *
     * @return shipDate
     */
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_SHIP_DATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public OffsetDateTime getShipDate() {
        return shipDate;
    }


    @JsonProperty(JSON_PROPERTY_SHIP_DATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setShipDate(OffsetDateTime shipDate) {
        this.shipDate = shipDate;
    }


    public Order status(StatusEnum status) {
        this.status = status;
        return this;
    }

    /**
     * Order Status
     *
     * @return status
     */
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_STATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public StatusEnum getStatus() {
        return status;
    }


    @JsonProperty(JSON_PROPERTY_STATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setStatus(StatusEnum status) {
        this.status = status;
    }


    public Order complete(Boolean complete) {
        this.complete = complete;
        return this;
    }

    /**
     * Get complete
     *
     * @return complete
     */
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_COMPLETE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getComplete() {
        return complete;
    }


    @JsonProperty(JSON_PROPERTY_COMPLETE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setComplete(Boolean complete) {
        this.complete = complete;
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

    @Override
    public int hashCode() {
        return Objects.hash(id, bookId, quantity, shipDate, status, complete);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Order {\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    bookId: ").append(toIndentedString(bookId)).append("\n");
        sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
        sb.append("    shipDate: ").append(toIndentedString(shipDate)).append("\n");
        sb.append("    status: ").append(toIndentedString(status)).append("\n");
        sb.append("    complete: ").append(toIndentedString(complete)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Order Status
     */
    public enum StatusEnum {
        PLACED("placed"),

        APPROVED("approved"),

        DELIVERED("delivered");

        private String value;

        StatusEnum(String value) {
            this.value = value;
        }

        @JsonCreator
        public static StatusEnum fromValue(String value) {
            for (StatusEnum b : StatusEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }
    }

}

